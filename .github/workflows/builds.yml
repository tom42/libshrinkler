# SPDX-FileCopyrightText: 2025 Thomas Mathys
# SPDX-License-Identifier: MIT

name: Builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Linux Builds (${{matrix.cxx_compiler}}, ${{matrix.build_type}})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        cxx_compiler: [clang++, g++-14]
        build_type: [Release, Debug]

    steps:

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{github.workspace}}/build" >> "$GITHUB_OUTPUT"

    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install Catch2
      shell: bash
      run: |
        sudo apt install catch2

    - name: Configure CMake
      run: >
        cmake
        -B ${{steps.strings.outputs.build-output-dir}}
        -S ${{github.workspace}}
        --preset dev-linux
        -DCMAKE_CXX_COMPILER=${{matrix.cxx_compiler}}
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      run: |
        cmake --build ${{steps.strings.outputs.build-output-dir}} --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{steps.strings.outputs.build-output-dir}}
      run: ctest --build-config ${{matrix.build_type}}

  build-windows:
    name: Windows Builds (${{matrix.arch}}, ${{matrix.build_type}})
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        arch: [x64, Win32]
        build_type: [Release, Debug]

    steps:

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{github.workspace}}/build" >> "$GITHUB_OUTPUT"

    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Configure CMake
      run: >
        cmake
        -B ${{steps.strings.outputs.build-output-dir}}
        -S ${{github.workspace}}
        -A ${{matrix.arch}}
        --preset dev-windows-default
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      run: |
        cmake --build ${{steps.strings.outputs.build-output-dir}} --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{steps.strings.outputs.build-output-dir}}
      run: ctest --build-config ${{matrix.build_type}}

  quality:
    name: Static Quality Checks
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:

    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install reuse
      shell: bash
      run: |
        pipx install reuse

    - name: Run reuse lint
      shell: bash
      run: |
        reuse lint
